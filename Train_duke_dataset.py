from OCT_train import trainModels

if __name__ == '__main__':
    # =======================
    # Baselines
    # =======================
    trainModels(model='attn_unet',
                data_set='duke',
                input_dim=1,
                epochs=250,
                width=64,
                depth=4,
                depth_limit=6,
                repeat=5,
                l_r=1e-3,
                l_r_s=True,
                train_batch=4,
                shuffle=True,
                loss='ce',
                norm='bn',
                log='MICCAI_Duke_Results',
                class_no=8,
                cluster=False,
                data_augmentation_train='all',
                data_augmentation_test='none')
    #
    trainModels(model='Segnet',
                data_set='duke',
                input_dim=1,
                epochs=250,
                width=64,
                depth=4,
                depth_limit=6,
                repeat=5,
                l_r=1e-3,
                l_r_s=True,
                train_batch=4,
                shuffle=True,
                loss='ce',
                norm='bn',
                log='MICCAI_Duke_Results',
                class_no=8,
                cluster=False,
                data_augmentation_train='all',
                data_augmentation_test='none')
    #
    trainModels(model='unet',
                data_set='duke',
                input_dim=1,
                epochs=250,
                width=64,
                depth=4,
                depth_limit=6,
                repeat=5,
                l_r=1e-3,
                l_r_s=True,
                train_batch=4,
                shuffle=True,
                loss='ce',
                norm='bn',
                log='MICCAI_Duke_Results',
                class_no=8,
                cluster=False,
                data_augmentation_train='all',
                data_augmentation_test='none')
    #
    trainModels(model='RelayNet',
                data_set='duke',
                input_dim=1,
                epochs=250,
                width=64,
                depth=4,
                depth_limit=6,
                repeat=5,
                l_r=1e-3,
                l_r_s=True,
                train_batch=4,
                shuffle=True,
                loss='ce',
                norm='bn',
                log='MICCAI_Duke_Results',
                class_no=8,
                cluster=False,
                data_augmentation_train='all',
                data_augmentation_test='none')
    # ================================================
    # Ours
    # ================================================
    # SOASNet using segnet+skip connection as backbone
    trainModels(model='SOASNet_segnet_skip',
                data_set='duke',
                input_dim=1,
                epochs=250,
                width=64,
                depth=4,
                depth_limit=6,
                repeat=5,
                l_r=1e-3,
                l_r_s=True,
                train_batch=4,
                shuffle=True,
                loss='ce',
                norm='bn',
                log='MICCAI_Duke_Results',
                class_no=8,
                cluster=False,
                data_augmentation_train='all',
                data_augmentation_test='none')
    #
    # SOASNet using segnet as backbone
    trainModels(model='SOASNet_segnet',
                data_set='duke',
                input_dim=1,
                epochs=250,
                width=64,
                depth=4,
                depth_limit=6,
                repeat=5,
                l_r=1e-3,
                l_r_s=True,
                train_batch=4,
                shuffle=True,
                loss='ce',
                norm='bn',
                log='MICCAI_Duke_Results',
                class_no=8,
                cluster=False,
                data_augmentation_train='all',
                data_augmentation_test='none')
    #
    # SOASNet using u-net as backbone
    trainModels(model='SOASNet',
                data_set='duke',
                input_dim=1,
                epochs=250,
                width=64,
                depth=4,
                depth_limit=6,
                repeat=5,
                l_r=1e-3,
                l_r_s=True,
                train_batch=4,
                shuffle=True,
                loss='ce',
                norm='bn',
                log='MICCAI_Duke_Results',
                class_no=8,
                cluster=False,
                data_augmentation_train='all',
                data_augmentation_test='none')
    #
    # SOASNet using u-net with large kernel as backbone
    trainModels(model='SOASNet_large_kernel',
                data_set='duke',
                input_dim=1,
                epochs=250,
                width=64,
                depth=4,
                depth_limit=6,
                repeat=5,
                l_r=1e-3,
                l_r_s=True,
                train_batch=4,
                shuffle=True,
                loss='ce',
                norm='bn',
                log='MICCAI_Duke_Results',
                class_no=8,
                cluster=False,
                data_augmentation_train='all',
                data_augmentation_test='none')
    #
    # SOASNet using u-net with single sized (5) as backbone
    trainModels(model='SOASNet_single',
                data_set='duke',
                input_dim=1,
                epochs=250,
                width=64,
                depth=4,
                depth_limit=6,
                repeat=5,
                l_r=1e-3,
                l_r_s=True,
                train_batch=4,
                shuffle=True,
                loss='ce',
                norm='bn',
                log='MICCAI_Duke_Results',
                class_no=8,
                cluster=False,
                data_augmentation_train='all',
                data_augmentation_test='none')
    #
    # SOASNet using u-net with very large kernel as backbone
    trainModels(model='SOASNet_very_large_kernel',
                data_set='duke',
                input_dim=1,
                epochs=250,
                width=64,
                depth=4,
                depth_limit=6,
                repeat=5,
                l_r=1e-3,
                l_r_s=True,
                train_batch=4,
                shuffle=True,
                loss='ce',
                norm='bn',
                log='MICCAI_Duke_Results',
                class_no=8,
                cluster=False,
                data_augmentation_train='all',
                data_augmentation_test='none')